[{"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\index.js":"1","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\reportWebVitals.js":"2","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\App.js":"3","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Home.js":"4","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Footer.js":"5","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Header.js":"6","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\SignInModal.js":"7","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\User\\UserHome.js":"8","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\SignUpModal.js":"9","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\axiosInstance.js":"10","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\Cities.js":"11","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\AdminHeader.js":"12","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\Zones.js":"13","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\Specialities.js":"14","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\Restaurants.js":"15","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Map.js":"16","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\User\\UserHeader.js":"17","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\AdminHome.js":"18","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\HomeBody.js":"19"},{"size":248,"mtime":1684670867012,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1681766151455,"results":"22","hashOfConfig":"21"},{"size":1020,"mtime":1684831120227,"results":"23","hashOfConfig":"21"},{"size":714,"mtime":1685799035115,"results":"24","hashOfConfig":"21"},{"size":1727,"mtime":1681766434971,"results":"25","hashOfConfig":"21"},{"size":1764,"mtime":1684687859886,"results":"26","hashOfConfig":"21"},{"size":3403,"mtime":1684958067657,"results":"27","hashOfConfig":"21"},{"size":5007,"mtime":1684817323664,"results":"28","hashOfConfig":"21"},{"size":3120,"mtime":1684753733417,"results":"29","hashOfConfig":"21"},{"size":523,"mtime":1684812306942,"results":"30","hashOfConfig":"21"},{"size":7651,"mtime":1684789573102,"results":"31","hashOfConfig":"21"},{"size":4229,"mtime":1684839328648,"results":"32","hashOfConfig":"21"},{"size":7904,"mtime":1684805206272,"results":"33","hashOfConfig":"21"},{"size":8494,"mtime":1684831983816,"results":"34","hashOfConfig":"21"},{"size":8610,"mtime":1684839379330,"results":"35","hashOfConfig":"21"},{"size":3822,"mtime":1685797834911,"results":"36","hashOfConfig":"21"},{"size":1349,"mtime":1684814634153,"results":"37","hashOfConfig":"21"},{"size":5012,"mtime":1684831160487,"results":"38","hashOfConfig":"21"},{"size":1743,"mtime":1685798964894,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"vs8e7b",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\index.js",[],[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\App.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Home.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Footer.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Header.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\SignInModal.js",["100"],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\User\\UserHome.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\SignUpModal.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\axiosInstance.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\Cities.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\AdminHeader.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\Zones.js",["101"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Form, Button, Modal } from \"react-bootstrap\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport AdminHeader from \"./AdminHeader\";\r\n\r\nfunction Zones() {\r\n  const [cities, setCities] = useState([]);\r\n  const [selectedCity, setSelectedCity] = useState(\"\");\r\n  const [zones, setZones] = useState([]);\r\n  const [filteredZones, setFilteredZones] = useState([]);\r\n  const [selectedZone, setSelectedZone] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [updatedZoneName, setUpdatedZoneName] = useState(\"\");\r\n  const [newZoneName, setNewZoneName] = useState(\"\");\r\n  const [newZoneCityId, setNewZoneCityId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n    fetchAllZones();\r\n  }, []);\r\n\r\n  const fetchCities = async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/api/villes\");\r\n      const data = response.data;\r\n      setCities(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching cities:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAllZones = async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/api/zones\");\r\n      const data = response.data;\r\n      setZones(data);\r\n      setFilteredZones(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching zones:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchZonesByVille = async (villeId) => {\r\n    try {\r\n      const response = await axiosInstance.get(`/api/zones/by-ville/${villeId}`);\r\n      const data = response.data;\r\n      setFilteredZones(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching zones:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCityChange = (e) => {\r\n    const selectedCityId = e.target.value;\r\n    setSelectedCity(selectedCityId);\r\n    if (selectedCityId === \"\") {\r\n      setFilteredZones(zones);\r\n    } else {\r\n      const filteredZonesByCity = zones.filter(\r\n        (zone) => zone.ville.id === parseInt(selectedCityId)\r\n      );\r\n      setFilteredZones(filteredZonesByCity);\r\n    }\r\n  };\r\n\r\n  const handleDeleteZone = async (zone) => {\r\n    try {\r\n      await axiosInstance.delete(`/api/zones/${zone.id}`);\r\n      setFilteredZones((prevZones) => prevZones.filter((z) => z.id !== zone.id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting zone:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateZone = (zone) => {\r\n    setSelectedZone(zone);\r\n    setUpdatedZoneName(zone.nom);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedZone(null);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleSaveUpdate = async () => {\r\n    if (selectedZone && updatedZoneName.trim() !== \"\") {\r\n      try {\r\n        const updatedZone = { ...selectedZone, nom: updatedZoneName };\r\n        await axiosInstance.put(`/api/zones/${selectedZone.id}`, updatedZone);\r\n        setFilteredZones((prevZones) =>\r\n          prevZones.map((zone) => (zone.id === selectedZone.id ? updatedZone : zone))\r\n        );\r\n        setSelectedZone(null);\r\n        setShowModal(false);\r\n      } catch (error) {\r\n        console.error(\"Error updating zone:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddZone = async (e) => {\r\n    e.preventDefault();\r\n    if (newZoneName.trim() !== \"\" && newZoneCityId !== \"\") {\r\n      try {\r\n        const newZone = {\r\n          nom: newZoneName,\r\n          ville: { id: newZoneCityId },\r\n        };\r\n        await axiosInstance.post(\"/api/zones\", newZone);\r\n        setNewZoneName(\"\");\r\n        setNewZoneCityId(\"\");\r\n        fetchAllZones();\r\n      } catch (error) {\r\n        console.error(\"Error adding zone:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n\r\n      <div className=\"container\">\r\n        <h1 className=\"mt-3\" style={{ fontFamily: \"cursive\" }}>\r\n          Liste des zones\r\n        </h1>\r\n        <div style={{ backgroundColor: \"#D3D3D3\" }}>\r\n          <div className=\"container mb-4\">\r\n            <h4>Ajouter une zone</h4>\r\n            <Form onSubmit={handleAddZone}>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <Form.Group>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={newZoneCityId}\r\n                      onChange={(e) => setNewZoneCityId(e.target.value)}\r\n                    >\r\n                      <option value=\"\">Select a city</option>\r\n                      {cities.map((city) => (\r\n                        <option key={city.id} value={city.id}>\r\n                          {city.nom}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <Form.Group>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={newZoneName}\r\n                      onChange={(e) => setNewZoneName(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n              <Button className=\"btn btn-success mt-2 mb-2\" type=\"submit\">\r\n                Add Zone\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <Form.Group>\r\n            <Form.Label className=\"alert alert-warning\">\r\n              Sélectionnez une ville pour filtrer les zones:\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={handleCityChange}\r\n              className=\"mb-4\"\r\n              value={selectedCity}\r\n            >\r\n              <option value=\"\">Select a city</option>\r\n              {cities.map((city) => (\r\n                <option key={city.id} value={city.id}>\r\n                  {city.nom}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n\r\n        {filteredZones.length > 0 && (\r\n          <Table striped bordered hover>\r\n            <thead style={{ backgroundColor: \"#9C9C9C\" }}>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredZones.map((zone) => (\r\n                <tr key={zone.id}>\r\n                  <td>{zone.id}</td>\r\n                  <td>{zone.nom}</td>\r\n                  <td>\r\n                    <Button\r\n                      onClick={() => handleUpdateZone(zone)}\r\n                      style={{ backgroundColor: \"#F28135\" }}\r\n                    >\r\n                      Update\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => handleDeleteZone(zone)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n\r\n        {/* Modal for zone update */}\r\n        <Modal show={showModal} onHide={handleCloseModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Update Zone</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Label>Zone Name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={updatedZoneName}\r\n                onChange={(e) => setUpdatedZoneName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSaveUpdate}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Zones;\r\n","C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\Specialities.js",["102"],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\Restaurants.js",["103","104","105","106","107","108","109","110","111","112","113","114"],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Map.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\User\\UserHeader.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\Admin\\AdminHome.js",[],[],"C:\\Users\\hp\\ReactProjects\\restaurants\\src\\components\\HomeBody.js",["115","116","117"],[],{"ruleId":"118","severity":1,"message":"119","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":43,"column":9,"nodeType":"120","messageId":"121","endLine":43,"endColumn":26},{"ruleId":"118","severity":1,"message":"123","line":12,"column":12,"nodeType":"120","messageId":"121","endLine":12,"endColumn":29},{"ruleId":"118","severity":1,"message":"124","line":18,"column":12,"nodeType":"120","messageId":"121","endLine":18,"endColumn":17},{"ruleId":"118","severity":1,"message":"125","line":19,"column":12,"nodeType":"120","messageId":"121","endLine":19,"endColumn":16},{"ruleId":"118","severity":1,"message":"126","line":20,"column":12,"nodeType":"120","messageId":"121","endLine":20,"endColumn":16},{"ruleId":"118","severity":1,"message":"127","line":21,"column":12,"nodeType":"120","messageId":"121","endLine":21,"endColumn":20},{"ruleId":"118","severity":1,"message":"128","line":22,"column":12,"nodeType":"120","messageId":"121","endLine":22,"endColumn":21},{"ruleId":"118","severity":1,"message":"129","line":23,"column":12,"nodeType":"120","messageId":"121","endLine":23,"endColumn":18},{"ruleId":"118","severity":1,"message":"130","line":24,"column":12,"nodeType":"120","messageId":"121","endLine":24,"endColumn":17},{"ruleId":"118","severity":1,"message":"131","line":27,"column":12,"nodeType":"120","messageId":"121","endLine":27,"endColumn":18},{"ruleId":"118","severity":1,"message":"132","line":27,"column":20,"nodeType":"120","messageId":"121","endLine":27,"endColumn":29},{"ruleId":"118","severity":1,"message":"133","line":31,"column":11,"nodeType":"120","messageId":"121","endLine":31,"endColumn":23},{"ruleId":"118","severity":1,"message":"134","line":66,"column":11,"nodeType":"120","messageId":"121","endLine":66,"endColumn":32},{"ruleId":"118","severity":1,"message":"135","line":128,"column":13,"nodeType":"120","messageId":"121","endLine":128,"endColumn":28},{"ruleId":"118","severity":1,"message":"136","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"137","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":13},{"ruleId":"118","severity":1,"message":"138","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":19},"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'fetchZonesByVille' is assigned a value but never used.","'incrementalNumber' is assigned a value but never used.","'serie' is assigned a value but never used.","'user' is assigned a value but never used.","'zone' is assigned a value but never used.","'zoneName' is assigned a value but never used.","'showModal' is assigned a value but never used.","'series' is assigned a value but never used.","'users' is assigned a value but never used.","'cities' is assigned a value but never used.","'setCities' is assigned a value but never used.","'getRestoById' is assigned a value but never used.","'handleRestoNameChange' is assigned a value but never used.","'handleOpenModal' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'SignInModal' is defined but never used."]