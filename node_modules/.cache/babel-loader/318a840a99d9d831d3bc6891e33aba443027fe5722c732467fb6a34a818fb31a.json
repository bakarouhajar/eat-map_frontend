{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\ReactProjects\\\\restaurants\\\\src\\\\components\\\\City.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport { Pagination } from 'react-bootstrap';\nimport \"../style/city.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst City = () => {\n  _s();\n  // État pour stocker la liste des cities \n  const [cities, setCities] = useState([]);\n\n  // État pour stocker le numéro de la page active\n  const [activePage, setActivePage] = useState(1);\n\n  // Constante pour stocker le nombre de villes à afficher par page\n  const citiesPerPage = 20;\n  const [cityName, setCityName] = useState('');\n  const [cityId, setCityId] = useState('');\n\n  // Fonction pour récupérer la liste des cities depuis le backend \n  const fetchCities = async () => {\n    try {\n      const response = await axios.get('/api/villes');\n      setCities(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getCityById = async id => {\n    try {\n      const response = await axios.get(`/api/villes/${id}`);\n      setCityId(response.data.id);\n      setCityName(response.data.name);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const addCity = async () => {\n    try {\n      const response = await axios.post('/api/villes', {\n        name: cityName\n      });\n      setCities([...cities, response.data]);\n      setCityName('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const updateCity = async () => {\n    try {\n      const response = await axios.put(`/api/villes/${cityId}`, {\n        nom: cityName\n      });\n      const updatedCities = cities.map(city => {\n        if (city.id === response.data.id) {\n          return response.data;\n        }\n        return city;\n      });\n      setCities(updatedCities);\n      setCityId('');\n      setCityName('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const deleteCity = async id => {\n    try {\n      await axios.delete(`/api/villes/${id}`);\n      const updatedCities = cities.filter(city => city.id !== id);\n      setCities(updatedCities);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Effet pour charger les cities au montage du composant \n  useEffect(() => {\n    fetchCities();\n  }, []);\n\n  // Calcul du nombre de pages\n  const pageCount = Math.ceil(cities.length / citiesPerPage);\n\n  // Fonction pour récupérer les villes de la page active\n  const getCitiesForPage = () => {\n    const startIndex = (activePage - 1) * citiesPerPage;\n    const endIndex = startIndex + citiesPerPage;\n    return cities.slice(startIndex, endIndex);\n  };\n\n  // Fonction pour changer de page\n  const handlePageChange = pageNumber => {\n    setActivePage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"City Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: city.nom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-sm mx-1\",\n              onClick: () => getCityById(city.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger btn-sm\",\n              onClick: () => deleteCity(city.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 5\n          }, this)]\n        }, city.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control mr-2 d-inline-block\",\n        value: cityName,\n        onChange: e => setCityName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this), cityId ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: updateCity,\n        children: \"Update City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: addCity,\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(City, \"zstv5ofsW5Tq5daLms9udJNz7Bw=\");\n_c = City;\nexport default City;\nvar _c;\n$RefreshReg$(_c, \"City\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table","Pagination","jsxDEV","_jsxDEV","City","_s","cities","setCities","activePage","setActivePage","citiesPerPage","cityName","setCityName","cityId","setCityId","fetchCities","response","get","data","error","console","getCityById","id","name","addCity","post","updateCity","put","nom","updatedCities","map","city","deleteCity","delete","filter","pageCount","Math","ceil","length","getCitiesForPage","startIndex","endIndex","slice","handlePageChange","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","scope","index","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/hp/ReactProjects/restaurants/src/components/City.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport axios from 'axios'; \r\nimport { Table } from 'react-bootstrap';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport \"../style/city.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst City = () => { \r\n  // État pour stocker la liste des cities \r\n  const [cities, setCities] = useState([]);\r\n  \r\n  // État pour stocker le numéro de la page active\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  // Constante pour stocker le nombre de villes à afficher par page\r\n  const citiesPerPage = 20;\r\n\r\n const [cityName, setCityName] = useState(''); \r\n const [cityId, setCityId] = useState('');\r\n\r\n  // Fonction pour récupérer la liste des cities depuis le backend \r\n  const fetchCities = async () => { \r\n    try { \r\n      const response = await axios.get('/api/villes'); \r\n      setCities(response.data); \r\n    } catch (error) { \r\n      console.error(error); \r\n    } \r\n  }; \r\n\r\n  const getCityById = async (id) => { \r\n    try { \r\n    const response = await axios.get(`/api/villes/${id}`); \r\n    setCityId(response.data.id); \r\n    setCityName(response.data.name); \r\n    } catch (error) { \r\n    console.error(error); \r\n    } \r\n   }; \r\n\r\n   const addCity = async () => { \r\n    try { \r\n    const response = await axios.post('/api/villes', { name: cityName }); \r\n    setCities([...cities, response.data]); \r\n    setCityName(''); \r\n    } catch (error) { \r\n    console.error(error); \r\n    } \r\n   }; \r\n\r\n   const updateCity = async () => { \r\n    try { \r\n    const response = await axios.put(`/api/villes/${cityId}`, { nom: cityName }); \r\n    const updatedCities = cities.map((city) => { \r\n    if (city.id === response.data.id) { \r\n    return response.data; \r\n    } \r\n    return city; \r\n    }); \r\n    setCities(updatedCities); \r\n    setCityId(''); \r\n    setCityName(''); \r\n    } catch (error) { \r\n    console.error(error); \r\n    } \r\n   }; \r\n\r\n   const deleteCity = async (id) => { \r\n    try { \r\n    await axios.delete(`/api/villes/${id}`); \r\n    const updatedCities = cities.filter((city) => city.id !== id); \r\n    setCities(updatedCities); \r\n    } catch (error) { \r\n    console.error(error); \r\n    } \r\n   }; \r\n  \r\n  // Effet pour charger les cities au montage du composant \r\n  useEffect(() => { \r\n    fetchCities(); \r\n  }, []); \r\n\r\n  // Calcul du nombre de pages\r\n  const pageCount = Math.ceil(cities.length / citiesPerPage);\r\n\r\n  // Fonction pour récupérer les villes de la page active\r\n  const getCitiesForPage = () => {\r\n    const startIndex = (activePage - 1) * citiesPerPage;\r\n    const endIndex = startIndex + citiesPerPage;\r\n    return cities.slice(startIndex, endIndex);\r\n  }\r\n\r\n  // Fonction pour changer de page\r\n  const handlePageChange = (pageNumber) => {\r\n    setActivePage(pageNumber);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n    <h1>Cities</h1>\r\n    <table className=\"table mt-3\">\r\n    <thead>\r\n    <tr>\r\n    <th scope=\"col\">#</th>\r\n    <th scope=\"col\">City Name</th>\r\n    <th scope=\"col\">Actions</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    {cities.map((city, index) => (\r\n    <tr key={city.id}>\r\n    <th scope=\"row\">{index + 1}</th>\r\n    <td>{city.nom}</td>\r\n    <td>\r\n    <button className=\"btn btn-primary btn-sm mx-1\" onClick={() =>\r\n    getCityById(city.id)}>\r\n    Edit\r\n    </button>\r\n    <button className=\"btn btn-danger btn-sm\" onClick={() =>\r\n    deleteCity(city.id)}>\r\n    Delete\r\n    </button>\r\n    </td>\r\n    </tr>\r\n    ))}\r\n    </tbody>\r\n    </table>\r\n    <div className=\"mt-3\">\r\n    <input\r\n    type=\"text\"\r\n    className=\"form-control mr-2 d-inline-block\"\r\n    value={cityName}\r\n    onChange={(e) => setCityName(e.target.value)}\r\n    />\r\n    {cityId ? (\r\n    <button className=\"btn btn-success\" onClick={updateCity}>\r\n    Update City\r\n    </button>\r\n    ) : (\r\n    <button className=\"btn btn-primary\" onClick={addCity}>\r\n    Add City\r\n    </button>\r\n    )}\r\n    </div>\r\n    </div>\r\n    );\r\n    \r\n}; \r\n\r\nexport default City;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}