{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\ReactProjects\\\\restaurants\\\\src\\\\components\\\\Admin\\\\Restaurants.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\nimport axiosInstance from \"../axiosInstance\";\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Restaurants() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [updatedRestaurantName, setUpdatedRestaurantName] = useState(\"\");\n  // Add other necessary state variables\n\n  useEffect(() => {\n    fetchRestaurants();\n  }, []);\n  const fetchRestaurants = async () => {\n    try {\n      const response = await axiosInstance.get(\"/api/restaurants\");\n      const data = response.data;\n      setRestaurants(data);\n    } catch (error) {\n      console.error(\"Error fetching restaurants:\", error);\n    }\n  };\n  const handleDeleteRestaurant = async restaurantId => {\n    try {\n      await axiosInstance.delete(`/api/restaurants/${restaurantId}`);\n      fetchRestaurants();\n    } catch (error) {\n      console.error(\"Error deleting restaurant:\", error);\n    }\n  };\n  const handleUpdateRestaurant = restaurant => {\n    setSelectedRestaurant(restaurant);\n    setUpdatedRestaurantName(restaurant.nom);\n    // Set other necessary state variables and show the modal\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedRestaurant(null);\n    setUpdatedRestaurantName(\"\");\n    // Reset other necessary state variables\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n      if (selectedRestaurant) {\n        const updatedRestaurant = {\n          ...selectedRestaurant,\n          nom: updatedRestaurantName\n        };\n        await axiosInstance.put(`/api/restaurants/${selectedRestaurant.id}`, updatedRestaurant);\n        fetchRestaurants();\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          title: 'Restaurant updated successfully',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        handleCloseModal();\n      }\n    } catch (error) {\n      console.error(\"Error updating restaurant:\", error);\n    }\n  };\n\n  // Implement other necessary functions for adding, searching, etc.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Restaurants, \"PWx+zwZOszI3kDE7RA7Nc2MPtrY=\");\n_c = Restaurants;\nexport default Restaurants;\nvar _c;\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"names":["React","useEffect","useState","Table","Button","Modal","Form","axiosInstance","Swal","jsxDEV","_jsxDEV","Restaurants","_s","restaurants","setRestaurants","selectedRestaurant","setSelectedRestaurant","showModal","setShowModal","updatedRestaurantName","setUpdatedRestaurantName","fetchRestaurants","response","get","data","error","console","handleDeleteRestaurant","restaurantId","delete","handleUpdateRestaurant","restaurant","nom","handleCloseModal","handleSaveChanges","updatedRestaurant","put","id","fire","position","icon","title","showConfirmButton","timer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/ReactProjects/restaurants/src/components/Admin/Restaurants.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction Restaurants() {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [updatedRestaurantName, setUpdatedRestaurantName] = useState(\"\");\r\n  // Add other necessary state variables\r\n\r\n  useEffect(() => {\r\n    fetchRestaurants();\r\n  }, []);\r\n\r\n  const fetchRestaurants = async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/api/restaurants\");\r\n      const data = response.data;\r\n      setRestaurants(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching restaurants:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRestaurant = async (restaurantId) => {\r\n    try {\r\n      await axiosInstance.delete(`/api/restaurants/${restaurantId}`);\r\n      fetchRestaurants();\r\n    } catch (error) {\r\n      console.error(\"Error deleting restaurant:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateRestaurant = (restaurant) => {\r\n    setSelectedRestaurant(restaurant);\r\n    setUpdatedRestaurantName(restaurant.nom);\r\n    // Set other necessary state variables and show the modal\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    setSelectedRestaurant(null);\r\n    setUpdatedRestaurantName(\"\");\r\n    // Reset other necessary state variables\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      if (selectedRestaurant) {\r\n        const updatedRestaurant = { ...selectedRestaurant, nom: updatedRestaurantName };\r\n        await axiosInstance.put(`/api/restaurants/${selectedRestaurant.id}`, updatedRestaurant);\r\n        fetchRestaurants();\r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Restaurant updated successfully',\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n        });\r\n        handleCloseModal();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating restaurant:\", error);\r\n    }\r\n  };\r\n\r\n  // Implement other necessary functions for adding, searching, etc.\r\n\r\n  return (\r\n    <div>\r\n      {/* Add your component JSX code here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Restaurants;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}