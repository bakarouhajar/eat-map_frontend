{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\ReactProjects\\\\restaurants\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const isMobile = windowWidth <= 768; // Adjust the breakpoint as needed\n\n  const containerStyle = {\n    width: '100%',\n    height: isMobile ? '500px' : '400px' // Adjust the height based on mobile or desktop view\n  };\n\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [fields, setFields] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const navigate = useNavigate(); // Get the navigate function from react-router-dom\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.log('Error retrieving location:', error);\n      });\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n    axios.get('/fields/all') // Adjust the API endpoint as per your backend setup\n    .then(response => {\n      setFields(response.data);\n    }).catch(error => {\n      console.error('Error retrieving fields:', error);\n    });\n  }, []);\n  const handleMarkerClick = field => {\n    // Navigate to the field details page when a marker is clicked\n    // Replace '/field/:id' with the actual route path for the field details page\n    navigate(`/field/${field.id}`);\n  };\n  const handleMapClick = event => {\n    const {\n      lat,\n      lng\n    } = event.latLng;\n    setSelectedLocation({\n      lat,\n      lng\n    });\n  };\n  const mapOptions = {\n    zoomControl: true,\n    zoom: 20\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      borderRadius: '8px',\n      overflow: 'hidden',\n      width: '320px',\n      margin: '0 auto',\n      backgroundColor: '#B6DB7B'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#E5F1D7',\n        borderBottom: '1px solid #ccc',\n        padding: '8px',\n        color: '#333',\n        textAlign: 'center',\n        fontWeight: 'bold'\n      },\n      children: \"Mobile Device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 'calc(100% - 32px)'\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: \"AIzaSyBC7TrnSJ6ZvaNUaspY6zbmOAbrz5PFF04\",\n        children: currentLocation && /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: containerStyle,\n          center: currentLocation,\n          options: mapOptions,\n          onClick: handleMapClick,\n          children: [fields.map(field => /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: field.latitude,\n              lng: field.longitude\n            },\n            title: field.nom,\n            onClick: () => handleMarkerClick(field)\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)), selectedLocation && /*#__PURE__*/_jsxDEV(Marker, {\n            position: selectedLocation,\n            title: `Selected Location (${selectedLocation.lat}, ${selectedLocation.lng})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"CcFqmh4BYprmcEurD9526DQuR6Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","useNavigate","axios","jsxDEV","_jsxDEV","Map","_s","windowWidth","setWindowWidth","window","innerWidth","isMobile","containerStyle","width","height","currentLocation","setCurrentLocation","fields","setFields","selectedLocation","setSelectedLocation","navigate","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","error","console","log","get","then","response","data","catch","handleMarkerClick","field","id","handleMapClick","event","latLng","mapOptions","zoomControl","zoom","handleResize","addEventListener","removeEventListener","style","border","borderRadius","overflow","margin","backgroundColor","children","borderBottom","padding","color","textAlign","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","mapContainerStyle","center","options","onClick","map","title","nom","_c","$RefreshReg$"],"sources":["C:/Users/hp/ReactProjects/restaurants/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport axios from 'axios';\r\n\r\nfunction Map() {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const isMobile = windowWidth <= 768; // Adjust the breakpoint as needed\r\n\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: isMobile ? '500px' : '400px' // Adjust the height based on mobile or desktop view\r\n  };\r\n\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const [fields, setFields] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n  const navigate = useNavigate(); // Get the navigate function from react-router-dom\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setCurrentLocation({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.log('Error retrieving location:', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.log('Geolocation is not supported by this browser.');\r\n    }\r\n\r\n    axios.get('/fields/all') // Adjust the API endpoint as per your backend setup\r\n      .then((response) => {\r\n        setFields(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error retrieving fields:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleMarkerClick = (field) => {\r\n    // Navigate to the field details page when a marker is clicked\r\n    // Replace '/field/:id' with the actual route path for the field details page\r\n    navigate(`/field/${field.id}`);\r\n  };\r\n\r\n  const handleMapClick = (event) => {\r\n    const { lat, lng } = event.latLng;\r\n    setSelectedLocation({ lat, lng });\r\n  };\r\n\r\n  const mapOptions = {\r\n    zoomControl: true,\r\n    zoom: 20\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: '1px solid #ccc',\r\n        borderRadius: '8px',\r\n        overflow: 'hidden',\r\n        width: '320px',\r\n        margin: '0 auto',\r\n        backgroundColor: '#B6DB7B'\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          backgroundColor: '#E5F1D7',\r\n          borderBottom: '1px solid #ccc',\r\n          padding: '8px',\r\n          color: '#333',\r\n          textAlign: 'center',\r\n          fontWeight: 'bold'\r\n        }}\r\n      >\r\n        Mobile Device\r\n      </div>\r\n      <div style={{ height: 'calc(100% - 32px)' }}>\r\n        <LoadScript googleMapsApiKey=\"AIzaSyBC7TrnSJ6ZvaNUaspY6zbmOAbrz5PFF04\">\r\n          {currentLocation && (\r\n            <GoogleMap\r\n              mapContainerStyle={containerStyle}\r\n              center={currentLocation}\r\n              options={mapOptions}\r\n              onClick={handleMapClick}\r\n            >\r\n              {fields.map((field) => (\r\n                <Marker\r\n                  key={field.id}\r\n                  position={{ lat: field.latitude, lng: field.longitude }}\r\n                  title={field.nom}\r\n                  onClick={() => handleMarkerClick(field)}\r\n                />\r\n              ))}\r\n              {selectedLocation && (\r\n                <Marker\r\n                  position={selectedLocation}\r\n                  title={`Selected Location (${selectedLocation.lat}, ${selectedLocation.lng})`}\r\n                />\r\n              )}\r\n            </GoogleMap>\r\n          )}\r\n        </LoadScript>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}