{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\ReactProjects\\\\restaurants\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const containerStyle = {\n    width: '100%',\n    height: '400px'\n  };\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [fields, setFields] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const navigate = useNavigate(); // Get the navigate function from react-router-dom\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.log('Error retrieving location:', error);\n      });\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n    axios.get('/fields/all') // Adjust the API endpoint as per your backend setup\n    .then(response => {\n      setFields(response.data);\n    }).catch(error => {\n      console.error('Error retrieving fields:', error);\n    });\n  }, []);\n  const handleMarkerClick = field => {\n    // Navigate to the field details page when a marker is clicked\n    // Replace '/field/:id' with the actual route path for the field details page\n    navigate(`/field/${field.id}`);\n  };\n  const handleMapClick = event => {\n    const {\n      lat,\n      lng\n    } = event.latLng;\n    setSelectedLocation({\n      lat,\n      lng\n    });\n  };\n  const mapOptions = {\n    zoomControl: true,\n    zoom: 20\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBC7TrnSJ6ZvaNUaspY6zbmOAbrz5PFF04\",\n    children: currentLocation && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: currentLocation,\n      options: mapOptions,\n      onClick: handleMapClick,\n      children: [fields.map(field => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: field.latitude,\n          lng: field.longitude\n        },\n        title: field.nom,\n        onClick: () => handleMarkerClick(field)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)), selectedLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: selectedLocation,\n        title: `Selected Location (${selectedLocation.lat}, ${selectedLocation.lng})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"PxZjGNvdw/W0i/bbeXkFjPEdlPY=\", false, function () {\n  return [useNavigate];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","useNavigate","axios","jsxDEV","_jsxDEV","Map","_s","containerStyle","width","height","currentLocation","setCurrentLocation","fields","setFields","selectedLocation","setSelectedLocation","navigate","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","error","console","log","get","then","response","data","catch","handleMarkerClick","field","id","handleMapClick","event","latLng","mapOptions","zoomControl","zoom","googleMapsApiKey","children","mapContainerStyle","center","options","onClick","map","title","nom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/ReactProjects/restaurants/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport axios from 'axios';\r\n\r\nfunction Map() {\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '400px'\r\n  };\r\n\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const [fields, setFields] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  \r\n  const navigate = useNavigate(); // Get the navigate function from react-router-dom\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setCurrentLocation({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.log('Error retrieving location:', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.log('Geolocation is not supported by this browser.');\r\n    }\r\n\r\n    axios.get('/fields/all') // Adjust the API endpoint as per your backend setup\r\n      .then((response) => {\r\n        setFields(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error retrieving fields:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleMarkerClick = (field) => {\r\n    // Navigate to the field details page when a marker is clicked\r\n    // Replace '/field/:id' with the actual route path for the field details page\r\n    navigate(`/field/${field.id}`);\r\n  };\r\n\r\n  const handleMapClick = (event) => {\r\n    const { lat, lng } = event.latLng;\r\n    setSelectedLocation({ lat, lng });\r\n  };\r\n\r\n  const mapOptions = {\r\n    zoomControl: true,\r\n    zoom: 20\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyBC7TrnSJ6ZvaNUaspY6zbmOAbrz5PFF04\">\r\n      {currentLocation && (\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={currentLocation}\r\n          options={mapOptions}\r\n          onClick={handleMapClick}\r\n        >\r\n          {fields.map((field) => (\r\n            <Marker\r\n              key={field.id}\r\n              position={{ lat: field.latitude, lng: field.longitude }}\r\n              title={field.nom}\r\n              onClick={() => handleMarkerClick(field)}\r\n            />\r\n          ))}\r\n          {selectedLocation && (\r\n            <Marker\r\n              position={selectedLocation}\r\n              title={`Selected Location (${selectedLocation.lat}, ${selectedLocation.lng})`}\r\n            />\r\n          )}\r\n        </GoogleMap>\r\n      )}\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}