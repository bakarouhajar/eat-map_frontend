{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\ReactProjects\\\\restaurants\\\\src\\\\components\\\\Admin\\\\Zones.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Form } from \"react-bootstrap\";\nimport axiosInstance from \"../axiosInstance\";\nimport AdminHeader from \"./AdminHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Zones() {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [zones, setZones] = useState([]);\n  const [filteredZones, setFilteredZones] = useState([]);\n  useEffect(() => {\n    fetchCities();\n    fetchAllZones();\n  }, []);\n  const fetchCities = async () => {\n    try {\n      const response = await axiosInstance.get(\"/api/villes\");\n      const data = response.data;\n      setCities(data);\n    } catch (error) {\n      console.error(\"Error fetching cities:\", error);\n    }\n  };\n  const fetchAllZones = async () => {\n    try {\n      const response = await axiosInstance.get(\"/api/zones\");\n      const data = response.data;\n      setZones(data);\n      setFilteredZones(data);\n    } catch (error) {\n      console.error(\"Error fetching zones:\", error);\n    }\n  };\n  const fetchZonesByVille = async villeName => {\n    try {\n      const response = await axiosInstance.get(\"/api/zones/by-ville\", {\n        params: {\n          villeName: villeName\n        }\n      });\n      const data = response.data;\n      setFilteredZones(data);\n    } catch (error) {\n      console.error(\"Error fetching zones:\", error);\n    }\n  };\n  const handleCityChange = e => {\n    const selectedCity = e.target.value;\n    setSelectedCity(selectedCity);\n    if (selectedCity === \"\") {\n      setFilteredZones(zones);\n    } else {\n      fetchZonesByVille(selectedCity);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-3\",\n        style: {\n          fontFamily: \"cursive\"\n        },\n        children: \"Zones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"alert alert-warning\",\n            children: \"S\\xE9lectionnez une ville pour filtrer les zones:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: handleCityChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city.nom,\n              children: city.nom\n            }, city.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), filteredZones.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredZones.map(zone => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: zone.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: zone.nom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, zone.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Zones, \"RitJZjWiisWxMZ89TZGgk73Z0lU=\");\n_c = Zones;\nexport default Zones;\nvar _c;\n$RefreshReg$(_c, \"Zones\");","map":{"version":3,"names":["React","useEffect","useState","Table","Form","axiosInstance","AdminHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","Zones","_s","cities","setCities","selectedCity","setSelectedCity","zones","setZones","filteredZones","setFilteredZones","fetchCities","fetchAllZones","response","get","data","error","console","fetchZonesByVille","villeName","params","handleCityChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","fontFamily","Group","Label","Control","as","onChange","map","city","nom","id","length","striped","bordered","hover","zone","_c","$RefreshReg$"],"sources":["C:/Users/hp/ReactProjects/restaurants/src/components/Admin/Zones.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Table, Form } from \"react-bootstrap\";\r\nimport axiosInstance from \"../axiosInstance\";\r\nimport AdminHeader from \"./AdminHeader\";\r\n\r\nfunction Zones() {\r\n  const [cities, setCities] = useState([]);\r\n  const [selectedCity, setSelectedCity] = useState(\"\");\r\n  const [zones, setZones] = useState([]);\r\n  const [filteredZones, setFilteredZones] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n    fetchAllZones();\r\n  }, []);\r\n\r\n  const fetchCities = async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/api/villes\");\r\n      const data = response.data;\r\n      setCities(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching cities:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAllZones = async () => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/api/zones\");\r\n      const data = response.data;\r\n      setZones(data);\r\n      setFilteredZones(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching zones:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchZonesByVille = async (villeName) => {\r\n    try {\r\n      const response = await axiosInstance.get(\"/api/zones/by-ville\", {\r\n        params: {\r\n          villeName: villeName,\r\n        },\r\n      });\r\n      const data = response.data;\r\n      setFilteredZones(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching zones:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCityChange = (e) => {\r\n    const selectedCity = e.target.value;\r\n    setSelectedCity(selectedCity);\r\n    if (selectedCity === \"\") {\r\n      setFilteredZones(zones);\r\n    } else {\r\n      fetchZonesByVille(selectedCity);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n\r\n      <div className=\"container\">\r\n        <h1 className=\"mt-3\" style={{ fontFamily: \"cursive\" }}>\r\n          Zones\r\n        </h1>\r\n\r\n        <div>\r\n          <Form.Group>\r\n            <Form.Label className=\"alert alert-warning\">\r\n              SÃ©lectionnez une ville pour filtrer les zones:\r\n            </Form.Label>\r\n            <Form.Control as=\"select\" onChange={handleCityChange}>\r\n              <option value=\"\">Select a city</option>\r\n              {cities.map((city) => (\r\n                <option key={city.id} value={city.nom}>\r\n                  {city.nom}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n\r\n        {filteredZones.length > 0 && (\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                {/* Add more columns as needed */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredZones.map((zone) => (\r\n                <tr key={zone.id}>\r\n                  <td>{zone.id}</td>\r\n                  <td>{zone.nom}</td>\r\n                  {/* Render additional zone properties as table cells */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Zones;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}